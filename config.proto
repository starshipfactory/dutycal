package dutycal;

// Cassandra authentication credentials. Mostly a bunch of key/value pairs.
message CassandraCredentials {
    required string key = 1;
    required string value = 2;
}

// Recurring events configuration for recurring events.
message RecurringEvent {
    enum RecurrenceType {
        WEEKDAY = 1;
    }

    // The type of recurrence.
    required RecurrenceType recurrence_type = 1;

    // On what number of the recurrence type the event should be placed,
    // e.g. the day of week if recurrence_type = WEEKDAY.
    required int32 recurrence_selector = 2;

    // The event title.
    required string title = 3;

    // Detailed data describing the event which should be added to the
    // calendar entry.
    required string description = 4;

    // Optional URL with additional details about the event.
    optional string reference = 5;

    // Whether or not the event must find an owner and cannot
    // be deleted through the web interface.
    required bool required = 6;

    // The hour at which the event starts.
    required int32 start_hour = 7;

    // The minute at which the event starts.
    optional int32 start_minute = 8 [default = 0];

    // The number of hours after which the event ends.
    required int32 duration_hours = 9;

    // The number of minutes after which the event ends.
    optional int32 duration_minutes = 10 [default = 0];
}

// Individual notification configuration. There can be multiple.
message UpcomingEventNotificationConfig {
    // Name of the section to refer to
    required string name = 1;

    // How many days to look ahead for events to warn about.
    // Defauls to 3 weeks.
    optional int32 warning_lookahead = 2 [default = 21];

    // Sender of the corresponding notification mails.
    required string sender = 3;

    // Recipient of the corresponding notification mails.
    required string recipient = 4;

    // Subject string of the notificaiton mails.
    required string subject = 5;

    // Path to the mail template file to use.
    required string template_path = 6;
}

// Authentication specific part of the configuration.
message DutyCalAuthConfig {
    // Then name of the application to be displayed to the user.
    optional string app_name = 1 [default = "Duty Calendar"];

    // Path to the PEM encoded X.509 certificate file.
    required string cert = 2;

    // Path to the DER encoded X.509 private key.
    required string key = 3;

    // CA certificate to verify the authentication certificate against.
    required string ca_certificate = 4;

    // SSO authentication server to redirect the user to.
    optional string authentication_server = 5
        [default = "login.ancient-solutions.com"];

    // X.509 keyserver to download referenced certificates from.
    optional string x509_keyserver = 6;

    // Size of the X.509 certificate cache to use for checking
    // certificates against.
    optional int32 x509_cache_size = 7 [default = 10];
}

// Configuration for sending email.
message DutyCalMailConfig {
        // Data to create a SMTP connection.
        // Name or address and port of the smtp server.
        required string smtp_server_address = 1;

        // Leave empty to use username instead.
        optional string identity = 2 [default = ""];

        // Username for the mail authentication.
        optional string username = 3;

        // Plaintext password for the mail authentication.
        optional string password = 4;
}

message DutyCalConfig {
    // host:port pair of the database server.
    optional string db_server = 1 [default = "localhost:9160"];

    // Cassandra authentication credentials.
    repeated CassandraCredentials db_credentials = 2;

    // Key space to place entries in.
    optional string keyspace = 3 [default = "dutycal"];

    // Column family name for events.
    optional string events_column_family = 4 [default = "events"];

    // The maximum number of events to fetch in a day.
    optional int32 max_events_per_day = 5 [default = 100];

    // Path to the template files.
    optional string template_path = 6 [default = "html"];

    // Path to the Twitter Bootstrap JavaScript/CSS directory.
    optional string bootstrap_path = 7
        [default = "/usr/share/twitter-bootstrap/files"];

    // Path to the Moment JavaScript date library.
    optional string moment_path = 8
        [default = "/usr/share/javascript/moment"];

    // Path to the fontawesome font directory.
    optional string fontawesome_path = 9
        [default = "/usr/share/fonts-font-awesome"];

    // Scope (e.g. LDAP group) an user must be authenticated to
    // to take on shifts.
    required string edit_scope = 10;

    // Authentication configuration.
    required DutyCalAuthConfig auth = 11;

    // Path to the PEM encoded X.509 web certificate file.
    required string tls_cert_file = 12;

    // Path to the PEM encoded X.509 web private key.
    required string tls_key_file = 13;

    // Recurring events which should be registered in the calendar.
    repeated RecurringEvent recurring_events = 14;

    // How many days to schedule ahead for recurring events.
    // Defaults to half a year.
    optional int32 recurring_events_schedule_ahead = 15 [default = 180];

    // Time zone for displaying times on the web site.
    optional string default_time_zone = 16 [default = "UTC"];

    // Configuration settings for notifying users about unowned upcoming
    // events.
    repeated UpcomingEventNotificationConfig upcoming_notifications = 17;

    // Mail delivery configuration.
    required DutyCalMailConfig mail_config = 18;
}
